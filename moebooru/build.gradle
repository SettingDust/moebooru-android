apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    signingConfigs {
        release {
            storeFile file(".keystore_onlymash.jks")
            storePassword System.getenv("KEYSTORE_PASS")
            keyAlias System.getenv("ALIAS_NAME")
            keyPassword System.getenv("ALIAS_PASS")
        }
    }
    compileSdkVersion rootProject.sdk_version
    buildToolsVersion rootProject.build_tools_version
    defaultConfig {
        applicationId "im.mash.moebooru"
        minSdkVersion rootProject.min_sdk_version
        targetSdkVersion rootProject.sdk_version
        versionCode rootProject.version_code
        versionName rootProject.version_name
        signingConfig signingConfigs.release
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testApplicationId "im.mash.moebooru.test"
    }
    setProperty("archivesBaseName", "moebooru_" + defaultConfig.versionName)
    buildTypes {
        release {
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            multiDexEnabled true
            pseudoLocalesEnabled true
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        debug.java.srcDirs += 'src/debug/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
    kapt {
        useBuildCache = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

afterEvaluate {
    android.sourceSets.all { sourceSet ->
        if (!sourceSet.name.startsWith("test") || !sourceSet.name.startsWith('androidTest')) {
            sourceSet.kotlin.setSrcDirs([])
        }
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

dependencies {
    implementation project(':core')
    implementation "com.android.support:support-v4:$support_library_version"
    implementation "com.android.support:cardview-v7:$support_library_version"
    implementation "com.android.support:customtabs:$support_library_version"
    implementation "com.android.support:support-annotations:$support_library_version"
    implementation "com.android.support:exifinterface:$support_library_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.mikepenz:materialdrawer:6.0.8'
    implementation "moe.shizuku.preference:preference:$rikka_preference_version"
    implementation "moe.shizuku.preference:preference-simplemenu:$rikka_preference_version"
    implementation "moe.shizuku.preference:preference-switchcompat:$rikka_preference_version"
    implementation "moe.shizuku.preference:preference-dialog-android:$rikka_preference_version"
    implementation "com.google.firebase:firebase-core:$firebase_version"
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.4'
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide_version"
    implementation "com.github.bumptech.glide:recyclerview-integration:$glide_version"
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.10.0'
    implementation "com.liulishuo.okdownload:okdownload:$okdownload_version"
    implementation "com.liulishuo.okdownload:sqlite:$okdownload_version"
    implementation "com.liulishuo.okdownload:okhttp:$okdownload_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp3_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    implementation "android.arch.lifecycle:runtime:$lifecycle_version"
    implementation "android.arch.lifecycle:livedata:$lifecycle_version"
    kapt "android.arch.lifecycle:compiler:$lifecycle_version"
    kapt "android.arch.persistence.room:compiler:$room_version"
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    testImplementation 'junit:junit:4.12'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

apply plugin: 'com.google.gms.google-services'
